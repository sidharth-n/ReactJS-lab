{"ast":null,"code":"var _jsxFileName = \"/home/sid/Desktop/React-lab/ReactJS-lab/HN-clone/hacker-news-clone/src/stories.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/* import React, { useState, useEffect } from \"react\";\nimport Comments from \"./comments\";\nimport Story from \"./story\";\n\nconst Stories = () => {\n  const [stories, setStories] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json\")\n      .then((response) => response.json())\n      .then(async (data) => {\n        const storyPromises = data\n          .slice(0, 100)\n          .map((storyId) =>\n            fetch(\n              `https://hacker-news.firebaseio.com/v0/item/${storyId}.json`\n            ).then((res) => res.json())\n          );\n        const storyData = await Promise.all(storyPromises);\n        console.log(storyData);\n        setStories(storyData);\n      });\n  }, []);\n\n  return (\n    <div>\n      <ol className=\"news\">\n        {stories.map((story) => (\n          <li>\n            <Story props={story} />\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default Stories;\n */\n\nexport default function Stories() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"This is working\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n_c = Stories;\nvar _c;\n$RefreshReg$(_c, \"Stories\");","map":{"version":3,"names":["Stories"],"sources":["/home/sid/Desktop/React-lab/ReactJS-lab/HN-clone/hacker-news-clone/src/stories.js"],"sourcesContent":["/* import React, { useState, useEffect } from \"react\";\nimport Comments from \"./comments\";\nimport Story from \"./story\";\n\nconst Stories = () => {\n  const [stories, setStories] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json\")\n      .then((response) => response.json())\n      .then(async (data) => {\n        const storyPromises = data\n          .slice(0, 100)\n          .map((storyId) =>\n            fetch(\n              `https://hacker-news.firebaseio.com/v0/item/${storyId}.json`\n            ).then((res) => res.json())\n          );\n        const storyData = await Promise.all(storyPromises);\n        console.log(storyData);\n        setStories(storyData);\n      });\n  }, []);\n\n  return (\n    <div>\n      <ol className=\"news\">\n        {stories.map((story) => (\n          <li>\n            <Story props={story} />\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default Stories;\n */\n\nexport default function Stories() {\n  return <h1>This is working</h1>;\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASA,OAAO,GAAG;EAChC,oBAAO;IAAA,UAAI;EAAe;IAAA;IAAA;IAAA;EAAA,QAAK;AACjC;AAAC,KAFuBA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}