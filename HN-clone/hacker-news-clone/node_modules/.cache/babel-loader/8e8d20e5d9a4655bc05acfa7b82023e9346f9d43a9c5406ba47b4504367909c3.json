{"ast":null,"code":"var _jsxFileName = \"/home/sid/Desktop/React-lab/ReactJS-lab/HN-clone/hacker-news-clone/src/story.js\",\n  _s = $RefreshSig$();\n/* import Comments from \"./comments\";\nimport { Link } from \"react-router-dom\";\nexport default function Story({ props }) {\n  function hoursPassed(timestamp) {\n    const now = Date.now() / 1000; // current time in Unix timestamp (in seconds)\n    const difference = now - timestamp; // difference in seconds\n    const hours = difference / 3600; // convert to hours\n    return Math.floor(hours);\n  }\n  const UpdateTime = hoursPassed(props.time);\n  return (\n    <li className=\"story\" key={props.id}>\n      <div className=\"story-top\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"7\"\n          height=\"7\"\n          viewBox=\"0 0 24 24\"\n          fill=\"grey\"\n          stroke=\"grey\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"></path>\n        </svg>\n        <div className=\"story-title\">{props.title}</div>\n        <a className=\"story-url\" href={props.url}>\n          {props.url\n            ? `(${props.url.replace(\"https://\", \"\").replace(\"www.\", \"\")})`\n            : \"\"}\n        </a>\n      </div>\n      <div className=\"story-sub\">\n        {props.score} points by {props.by} {UpdateTime}\n        {UpdateTime == 1 ? \" hour \" : \" hours \"}\n        ago | hide |{\" \"}\n        <Link className=\"link\" to={`/comments/${props.id}`}>\n          {props.descendants} Comments\n        </Link>\n      </div>\n    </li>\n  );\n}\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = _ref => {\n  let {\n    comment\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: comment.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), comment.kids && comment.kids.map(kid => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: kid\n    }, kid.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = Comment;\nconst App = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/item/1.json`).then(res => res.json()).then(data => setComments(data.kids));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Comment","comment","text","kids","map","kid","id","App","comments","setComments","fetch","then","res","json","data"],"sources":["/home/sid/Desktop/React-lab/ReactJS-lab/HN-clone/hacker-news-clone/src/story.js"],"sourcesContent":["/* import Comments from \"./comments\";\nimport { Link } from \"react-router-dom\";\nexport default function Story({ props }) {\n  function hoursPassed(timestamp) {\n    const now = Date.now() / 1000; // current time in Unix timestamp (in seconds)\n    const difference = now - timestamp; // difference in seconds\n    const hours = difference / 3600; // convert to hours\n    return Math.floor(hours);\n  }\n  const UpdateTime = hoursPassed(props.time);\n  return (\n    <li className=\"story\" key={props.id}>\n      <div className=\"story-top\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"7\"\n          height=\"7\"\n          viewBox=\"0 0 24 24\"\n          fill=\"grey\"\n          stroke=\"grey\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"></path>\n        </svg>\n        <div className=\"story-title\">{props.title}</div>\n        <a className=\"story-url\" href={props.url}>\n          {props.url\n            ? `(${props.url.replace(\"https://\", \"\").replace(\"www.\", \"\")})`\n            : \"\"}\n        </a>\n      </div>\n      <div className=\"story-sub\">\n        {props.score} points by {props.by} {UpdateTime}\n        {UpdateTime == 1 ? \" hour \" : \" hours \"}\n        ago | hide |{\" \"}\n        <Link className=\"link\" to={`/comments/${props.id}`}>\n          {props.descendants} Comments\n        </Link>\n      </div>\n    </li>\n  );\n}\n */\n\nimport React, { useState, useEffect } from \"react\";\n\nconst Comment = ({ comment }) => {\n  return (\n    <div>\n      <p>{comment.text}</p>\n      {comment.kids &&\n        comment.kids.map((kid) => <Comment key={kid.id} comment={kid} />)}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/item/1.json`)\n      .then((res) => res.json())\n      .then((data) => setComments(data.kids));\n  }, []);\n\n  return (\n    <div>\n      {comments.map((comment) => (\n        <Comment key={comment.id} comment={comment} />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,OAAO,GAAG,QAAiB;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC1B,oBACE;IAAA,wBACE;MAAA,UAAIA,OAAO,CAACC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,EACpBD,OAAO,CAACE,IAAI,IACXF,OAAO,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,iBAAK,QAAC,OAAO;MAAc,OAAO,EAAEA;IAAI,GAArBA,GAAG,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAAkB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/D;AAEV,CAAC;AAAC,KARIN,OAAO;AAUb,MAAMO,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAE,mDAAkD,CAAC,CACvDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAACK,IAAI,CAACX,IAAI,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,UACGK,QAAQ,CAACJ,GAAG,CAAEH,OAAO,iBACpB,QAAC,OAAO;MAAkB,OAAO,EAAEA;IAAQ,GAA7BA,OAAO,CAACK,EAAE;MAAA;MAAA;MAAA;IAAA,QACzB;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAhBIC,GAAG;AAAA,MAAHA,GAAG;AAkBT,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}