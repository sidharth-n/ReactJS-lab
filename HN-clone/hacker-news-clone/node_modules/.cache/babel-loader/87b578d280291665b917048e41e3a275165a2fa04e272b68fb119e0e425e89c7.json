{"ast":null,"code":"var _jsxFileName = \"/home/sid/Desktop/React-lab/ReactJS-lab/HN-clone/hacker-news-clone/src/stories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"./loading\";\nimport Story from \"./story\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stories = () => {\n  _s();\n  const [stories, setStories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const cachedData = localStorage.getItem(\"stories\");\n    if (cachedData) {\n      setStories(JSON.parse(cachedData));\n      setLoading(false);\n    } else {\n      fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json\").then(response => response.json()).then(async data => {\n        const storyPromises = data.slice(0, 100).map(storyId => fetch(`https://hacker-news.firebaseio.com/v0/item/${storyId}.json`).then(res => res.json()));\n        const storyData = await Promise.all(storyPromises);\n        console.log(storyData);\n        setStories(storyData);\n        setLoading(false);\n        localStorage.setItem(\"stories\", JSON.stringify(storyData));\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"news\",\n      children: stories.map(story => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: `/comments/${props.id}`,\n          children: /*#__PURE__*/_jsxDEV(Story, {\n            props: story\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, story.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Stories, \"zCjlpGcoUr1rea4W35sCCv7lOUw=\");\n_c = Stories;\nexport default Stories;\nvar _c;\n$RefreshReg$(_c, \"Stories\");","map":{"version":3,"names":["React","useState","useEffect","Link","Loading","Story","Stories","stories","setStories","loading","setLoading","cachedData","localStorage","getItem","JSON","parse","fetch","then","response","json","data","storyPromises","slice","map","storyId","res","storyData","Promise","all","console","log","setItem","stringify","story","props","id"],"sources":["/home/sid/Desktop/React-lab/ReactJS-lab/HN-clone/hacker-news-clone/src/stories.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"./loading\";\nimport Story from \"./story\";\n\nconst Stories = () => {\n  const [stories, setStories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const cachedData = localStorage.getItem(\"stories\");\n    if (cachedData) {\n      setStories(JSON.parse(cachedData));\n      setLoading(false);\n    } else {\n      fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json\")\n        .then((response) => response.json())\n        .then(async (data) => {\n          const storyPromises = data\n            .slice(0, 100)\n            .map((storyId) =>\n              fetch(\n                `https://hacker-news.firebaseio.com/v0/item/${storyId}.json`\n              ).then((res) => res.json())\n            );\n          const storyData = await Promise.all(storyPromises);\n\n          console.log(storyData);\n          setStories(storyData);\n          setLoading(false);\n          localStorage.setItem(\"stories\", JSON.stringify(storyData));\n        });\n    }\n  }, []);\n\n  return (\n    <div>\n      {loading && <Loading />}\n      <ol className=\"news\">\n        {stories.map((story) => (\n          <li key={story.id}>\n            <Link className=\"link\" to={`/comments/${props.id}`}>\n              <Story props={story} />\n            </Link>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default Stories;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAAC;AAE5B,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAClD,IAAIF,UAAU,EAAE;MACdH,UAAU,CAACM,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;MAClCD,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLM,KAAK,CAAC,uDAAuD,CAAC,CAC3DC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAC,MAAOG,IAAI,IAAK;QACpB,MAAMC,aAAa,GAAGD,IAAI,CACvBE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CACbC,GAAG,CAAEC,OAAO,IACXR,KAAK,CACF,8CAA6CQ,OAAQ,OAAM,CAC7D,CAACP,IAAI,CAAEQ,GAAG,IAAKA,GAAG,CAACN,IAAI,EAAE,CAAC,CAC5B;QACH,MAAMO,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,aAAa,CAAC;QAElDQ,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;QACtBlB,UAAU,CAACkB,SAAS,CAAC;QACrBhB,UAAU,CAAC,KAAK,CAAC;QACjBE,YAAY,CAACmB,OAAO,CAAC,SAAS,EAAEjB,IAAI,CAACkB,SAAS,CAACN,SAAS,CAAC,CAAC;MAC5D,CAAC,CAAC;IACN;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,WACGjB,OAAO,iBAAI,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACvB;MAAI,SAAS,EAAC,MAAM;MAAA,UACjBF,OAAO,CAACgB,GAAG,CAAEU,KAAK,iBACjB;QAAA,uBACE,QAAC,IAAI;UAAC,SAAS,EAAC,MAAM;UAAC,EAAE,EAAG,aAAYC,KAAK,CAACC,EAAG,EAAE;UAAA,uBACjD,QAAC,KAAK;YAAC,KAAK,EAAEF;UAAM;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MAClB,GAHAA,KAAK,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAKlB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GA3CI7B,OAAO;AAAA,KAAPA,OAAO;AA6Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}