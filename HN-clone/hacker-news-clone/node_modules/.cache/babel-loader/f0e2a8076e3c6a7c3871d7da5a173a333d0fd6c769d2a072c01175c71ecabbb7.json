{"ast":null,"code":"/* import { useState, useEffect, useRef } from \"react\";\nimport HackerNews from \"./App\";\nexport default function Comments({ id }) {\n  function hoursPassed(timestamp) {\n    const now = Date.now() / 1000; // current time in Unix timestamp (in seconds)\n    const difference = now - timestamp; // difference in seconds\n    const hours = difference / 3600; // convert to hours\n    return Math.floor(hours);\n  }\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`)\n      .then((response) => response.json())\n      .then(async (data) => {\n        const storyPromises = data.kids.map((storyId) =>\n          fetch(\n            `https://hacker-news.firebaseio.com/v0/item/${storyId}.json`\n          ).then((res) => res.json())\n        );\n        const storyData = await Promise.all(storyPromises);\n        setComments(storyData);\n        console.log(storyData);\n      });\n  }, []);\n  return (\n    <ul>\n      {comments.map((comment) => (\n        <li\n          className=\"comments\"\n          key={comment.id}\n          style={{ marginLeft: \"40px\" }}\n        >\n          <div className=\"comment-head\">\n            <svg\n              className=\"t-up\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"9\"\n              height=\"9\"\n              viewBox=\"0 0 24 24\"\n              fill=\"grey\"\n              stroke=\"grey\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"></path>\n            </svg>\n            {comment.by} {hoursPassed(comment.time)}\n            {hoursPassed(comment.time) == 1 ? \" hour \" : \" hours \"} ago | root |\n            parent | next\n          </div>\n          <div dangerouslySetInnerHTML={{ __html: comment.text }} />\n          {comment.kids && comment.kids.map((kid) => <Comments id={kid} />)}\n        </li>\n      ))}\n    </ul>\n  );\n}\n */","map":{"version":3,"names":[],"sources":["/home/sid/Desktop/React-lab/ReactJS-lab/HN-clone/hacker-news-clone/src/comments.js"],"sourcesContent":["/* import { useState, useEffect, useRef } from \"react\";\nimport HackerNews from \"./App\";\nexport default function Comments({ id }) {\n  function hoursPassed(timestamp) {\n    const now = Date.now() / 1000; // current time in Unix timestamp (in seconds)\n    const difference = now - timestamp; // difference in seconds\n    const hours = difference / 3600; // convert to hours\n    return Math.floor(hours);\n  }\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`)\n      .then((response) => response.json())\n      .then(async (data) => {\n        const storyPromises = data.kids.map((storyId) =>\n          fetch(\n            `https://hacker-news.firebaseio.com/v0/item/${storyId}.json`\n          ).then((res) => res.json())\n        );\n        const storyData = await Promise.all(storyPromises);\n        setComments(storyData);\n        console.log(storyData);\n      });\n  }, []);\n  return (\n    <ul>\n      {comments.map((comment) => (\n        <li\n          className=\"comments\"\n          key={comment.id}\n          style={{ marginLeft: \"40px\" }}\n        >\n          <div className=\"comment-head\">\n            <svg\n              className=\"t-up\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"9\"\n              height=\"9\"\n              viewBox=\"0 0 24 24\"\n              fill=\"grey\"\n              stroke=\"grey\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            >\n              <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"></path>\n            </svg>\n            {comment.by} {hoursPassed(comment.time)}\n            {hoursPassed(comment.time) == 1 ? \" hour \" : \" hours \"} ago | root |\n            parent | next\n          </div>\n          <div dangerouslySetInnerHTML={{ __html: comment.text }} />\n          {comment.kids && comment.kids.map((kid) => <Comments id={kid} />)}\n        </li>\n      ))}\n    </ul>\n  );\n}\n */\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}